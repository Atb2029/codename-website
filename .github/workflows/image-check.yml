name: Image Resolution and File Size Check

on:
  pull_request:
    types: [opened, synchronize]  # Runs on pull request opened or updated
    paths:
      - '**/*.png'
      - '**/*.jpg'
      - '**/*.jpeg'

jobs:
  check_image:
    permissions:
      pull-requests: write
      issues: write
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Fetch all commits to check for changed files

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install required Python packages
        run: |
          python -m pip install --upgrade pip
          pip install Pillow

      - name: Get changed image files
        id: image_info
        run: |
          base_commit="${{ github.event.before }}"
          head_commit="${{ github.sha }}"
          changed_images=$(git diff --name-only $base_commit $head_commit | grep -E "\.(jpg|jpeg|png)$" || true)

          if [ -z "$changed_images" ]; then
            echo "image_details=No image files changed." >> $GITHUB_OUTPUT
            exit 0
          fi

          image_details="**Image Details for Changed Files:**\n\n"

          for image in $changed_images; do
            resolution=$(python -c "from PIL import Image; img = Image.open('$image'); print(f'{img.size[0]}x{img.size[1]}')")
            filesize=$(stat --format="%s" $image)
            image_details="${image_details}**File:** $image\nResolution: $resolution\nFile Size: $filesize bytes\n\n"
          done

          echo "image_details=${image_details}" >> $GITHUB_OUTPUT

      - name: Debug information
        run: |
          echo "Issue Number: ${{ github.event.number }}"
          echo "Context Repo Owner: ${{ github.event.repository.owner.login }}"
          echo "Context Repo Name: ${{ github.event.repository.name }}"
          echo "Repository: $GITHUB_REPOSITORY"
          echo "Event Path: $GITHUB_EVENT_PATH"

      - name: Create comment with image details
        if: steps.image_info.outputs.image_details != 'No image files changed.' && steps.image_info.outputs.image_details != ''
        uses: actions/github-script@v6
        with:
          github-token: ${{ github.token }}
          script: |
            const body = `${{ steps.image_info.outputs.image_details }}`;
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body: body
            });
